// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandologicReact.Models;

namespace PandologicReact.Data
{
    [DbContext(typeof(JobsDBContext))]
    partial class JobsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("PandologicReact.Models.DailyJobs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActiveJobs")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CumulativeViews")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CumulativeViewsPredicted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("LandingPageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LandingPageId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveJobs = 10,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActiveJobs = 22,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActiveJobs = 33,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActiveJobs = 44,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActiveJobs = 55,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActiveJobs = 66,
                            CumulativeViews = 99,
                            CumulativeViewsPredicted = 111,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LandingPageId = 1
                        });
                });

            modelBuilder.Entity("PandologicReact.Models.LandingPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "xyz",
                            Url = "https://xyz.com/MainPage"
                        },
                        new
                        {
                            Id = 2,
                            Name = "yyy",
                            Url = "https://yyy.com/MainPage"
                        });
                });

            modelBuilder.Entity("PandologicReact.Models.DailyJobs", b =>
                {
                    b.HasOne("PandologicReact.Models.LandingPage", null)
                        .WithMany("DailyJobs")
                        .HasForeignKey("LandingPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandologicReact.Models.LandingPage", b =>
                {
                    b.Navigation("DailyJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
